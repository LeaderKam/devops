---
- name: installation des serveur
  hosts: localhost
  become: yes
  connection: local
  vars:
    NODEJS_VERSION: "12"
    ansible_distribution_release: "xenial" #trusty
  tasks:
    #Install using the repository  https://docs.docker.com/engine/install/ubuntu/
    #SET UP THE REPOSITORY
    
    - name: Uninstall old versions
      command: sudo apt-get remove docker docker-engine docker.io containerd runc
      ignore_errors: yes
    - name: Installation of docker packages
      apt: name={{item}} update_cache=no state=latest
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    - name: Add Docker official GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      # become: yes
      # become_user: root
    - name: Verify that you now have the key with the fingerprint
      command: sudo apt-key fingerprint 0EBFCD88
    # - name: set up the stable repository
      # command: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"

    #INSTALL DOCKER ENGINE
    - name:  install the latest version of Docker Engine and containerd
      apt: name=docker.io update_cache=no state=latest
    - name: update
      command: sudo apt update
    - name: install docker-compose
      shell: sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - name: Access
      shell: sudo chmod +x /usr/local/bin/docker-compose
    #can be avoid
    - name: Fingerprint
      command: apt-cache madison docker-ce

    - name: Verify that Docker Engine is installed correctly
      command: sudo docker run hello-world
    
    #For the front management
    #- name: Nodejs installation for front launch
    #  shell: sudo apt install nodejs
    - name: Install the gpg key for nodejs LTS
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
        state: present

    - name: Install the nodejs LTS repos
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ NODEJS_VERSION }}.x {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes

    - name: Install the nodejs
      apt:
        name: nodejs
        state: present

    #- name: Npm installation for node management
     # command: sudo apt install npm

    #for application launching
    - name: Install Maven using Ansible
      become: yes
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
           - maven
    
    #launching docker and after the api
    - name: Launching
      command: chdir=api/ touch kam_test
    - name: detach docker
      shell: chdir=api/ sudo docker-compose up --detach

    #launching the api
    - name: Launching the api
      command: chdir=api/ mvn compile quarkus:dev
    #front launching
    - name: packages installation
      command: chdir=front/ npm i
    - name: Launching the front
      command: chdir=front/ npm start
...
#sudo ansible-playbook -i hosts, playbook.yml --connection=local
#for execution
